@model IEnumerable<LMS.Models.Course>
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager
@inject LMS.Data.ApplicationDbContext _context


@{
    ViewData["Title"] = "Index";
    var user = await UserManager.GetUserAsync(User);
}

<h1>Available Courses</h1>
@if (SignInManager.IsSignedIn(User) && (user.Role.Equals("instructor") || user.Role.Equals("admin")))
{
    <p>
        <a class="btn-success p-1" asp-action="Create">Create New</a>
    </p>
}
@if (TempData["Error"] != null)
        {
            <div class="col-md-12 alert alert-danger">
                <span><b>Sorry!</b> - @TempData["Error"] </span>
            </div>
        }
<table class="table">
    <thead>
        <tr>
            <th>
                Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                Instructor
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EnrollmentCount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {

   
            var userInstructor = await UserManager.FindByIdAsync(item.InstructorId);
            var username = userInstructor != null ? userInstructor.UserName : "User not found";
            var isEnrolled = _context.Enrollments
            .Any(e => e.CourseId == item.CourseId && e.UserId == user.Id);

        <tr>
            <td>
                <img style="width:250px" src=@Html.DisplayFor(modelItem => item.ImageURL) />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @username
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentCount)
            </td>
            <td>
                    @if (SignInManager.IsSignedIn(User) && user.Role.Equals("user") && !isEnrolled )
                    {
                        <a class="btn-success p-1 rounded" asp-action="Enroll" asp-route-courseId="@item.CourseId">Enroll</a> 
                        <span> | </span>
                    }
                    else @if (SignInManager.IsSignedIn(User) && user.Role.Equals("user") && isEnrolled )
                    {
                        <a class="btn-success p-1 rounded" asp-action="ViewCourse" asp-route-courseId="@item.CourseId">Learn</a> 
                        <span> | </span>
                    }
                    
                    <a class="btn-primary p-1 rounded" asp-action="Details" asp-route-id="@item.CourseId">Details</a>
                @if(SignInManager.IsSignedIn(User) && ( user.Role.Equals("admin") || item.InstructorId == user.Id)){ <span> | </span>
                        <a class="btn-warning p-1 rounded" asp-action="Edit" asp-route-id="@item.CourseId">Edit</a> <span> | </span>
                <a class="btn-danger p-1 rounded" asp-action="Delete" asp-route-id="@item.CourseId">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
